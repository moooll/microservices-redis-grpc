// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: protocol/price.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfitAndLossRequestPosition int32

const (
	ProfitAndLossRequest_UNDEF ProfitAndLossRequestPosition = 0
	ProfitAndLossRequest_OPEN  ProfitAndLossRequestPosition = 5
	ProfitAndLossRequest_CLOSE ProfitAndLossRequestPosition = 6
)

// Enum value maps for ProfitAndLossRequestPosition.
var (
	ProfitAndLossRequestPosition_name = map[int32]string{
		0: "UNDEF",
		5: "OPEN",
		6: "CLOSE",
	}
	ProfitAndLossRequestPosition_value = map[string]int32{
		"UNDEF": 0,
		"OPEN":  5,
		"CLOSE": 6,
	}
)

func (x ProfitAndLossRequestPosition) Enum() *ProfitAndLossRequestPosition {
	p := new(ProfitAndLossRequestPosition)
	*p = x
	return p
}

func (x ProfitAndLossRequestPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProfitAndLossRequestPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_price_proto_enumTypes[0].Descriptor()
}

func (ProfitAndLossRequestPosition) Type() protoreflect.EnumType {
	return &file_protocol_price_proto_enumTypes[0]
}

func (x ProfitAndLossRequestPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProfitAndLossRequestPosition.Descriptor instead.
func (ProfitAndLossRequestPosition) EnumDescriptor() ([]byte, []int) {
	return file_protocol_price_proto_rawDescGZIP(), []int{0, 0}
}

type ProfitAndLossRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CompanyName string  `protobuf:"bytes,2,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	BuyPrice    float32 `protobuf:"fixed32,3,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	SellPrice   float32 `protobuf:"fixed32,4,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
}

func (x *ProfitAndLossRequest) Reset() {
	*x = ProfitAndLossRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_price_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfitAndLossRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfitAndLossRequest) ProtoMessage() {}

func (x *ProfitAndLossRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_price_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfitAndLossRequest.ProtoReflect.Descriptor instead.
func (*ProfitAndLossRequest) Descriptor() ([]byte, []int) {
	return file_protocol_price_proto_rawDescGZIP(), []int{0}
}

func (x *ProfitAndLossRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProfitAndLossRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *ProfitAndLossRequest) GetBuyPrice() float32 {
	if x != nil {
		return x.BuyPrice
	}
	return 0
}

func (x *ProfitAndLossRequest) GetSellPrice() float32 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

type ProfitAndLossResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string  `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	CompanyName   string  `protobuf:"bytes,8,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ProfitAndLoss float32 `protobuf:"fixed32,9,opt,name=profit_and_loss,json=profitAndLoss,proto3" json:"profit_and_loss,omitempty"`
}

func (x *ProfitAndLossResponse) Reset() {
	*x = ProfitAndLossResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_price_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfitAndLossResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfitAndLossResponse) ProtoMessage() {}

func (x *ProfitAndLossResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_price_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfitAndLossResponse.ProtoReflect.Descriptor instead.
func (*ProfitAndLossResponse) Descriptor() ([]byte, []int) {
	return file_protocol_price_proto_rawDescGZIP(), []int{1}
}

func (x *ProfitAndLossResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProfitAndLossResponse) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *ProfitAndLossResponse) GetProfitAndLoss() float32 {
	if x != nil {
		return x.ProfitAndLoss
	}
	return 0
}

var File_protocol_price_proto protoreflect.FileDescriptor

var file_protocol_price_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2a,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x05, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x06, 0x22, 0x72, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x32, 0x54,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x12,
	0x43, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c,
	0x6f, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c,
	0x6f, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x41, 0x6e, 0x64, 0x4c, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6f, 0x6f, 0x6c, 0x6c, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2d, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_price_proto_rawDescOnce sync.Once
	file_protocol_price_proto_rawDescData = file_protocol_price_proto_rawDesc
)

func file_protocol_price_proto_rawDescGZIP() []byte {
	file_protocol_price_proto_rawDescOnce.Do(func() {
		file_protocol_price_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_price_proto_rawDescData)
	})
	return file_protocol_price_proto_rawDescData
}

var file_protocol_price_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protocol_price_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protocol_price_proto_goTypes = []interface{}{
	(ProfitAndLossRequestPosition)(0), // 0: ProfitAndLossRequest.position
	(*ProfitAndLossRequest)(nil),      // 1: ProfitAndLossRequest
	(*ProfitAndLossResponse)(nil),     // 2: ProfitAndLossResponse
}
var file_protocol_price_proto_depIdxs = []int32{
	1, // 0: ProfitAndLoss.GetProfitAndLoss:input_type -> ProfitAndLossRequest
	2, // 1: ProfitAndLoss.GetProfitAndLoss:output_type -> ProfitAndLossResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protocol_price_proto_init() }
func file_protocol_price_proto_init() {
	if File_protocol_price_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_price_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfitAndLossRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_price_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfitAndLossResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_price_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_price_proto_goTypes,
		DependencyIndexes: file_protocol_price_proto_depIdxs,
		EnumInfos:         file_protocol_price_proto_enumTypes,
		MessageInfos:      file_protocol_price_proto_msgTypes,
	}.Build()
	File_protocol_price_proto = out.File
	file_protocol_price_proto_rawDesc = nil
	file_protocol_price_proto_goTypes = nil
	file_protocol_price_proto_depIdxs = nil
}
